nameOverride: ""
fullnameOverride: ""

# Use set file to place a Gateway license here
license:
  value:
  accept: false

image:
  registry: docker.io
  repository: caapim/gateway
  tag: 10.0.00
  pullPolicy: Always
  # Will create a Registry secret and apply it to the Gateway
  secretName:
  credentials:
   username:
   password:

# Number of Edge Gateways to deploy
replicas: 1
# Update strategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Cluster Hostname
clusterHostname: broadcom.localdomain

# Cluster Password, used if db backed
clusterPassword: 7layer

# This enables/disables Policy Manager Access and sets the SSG_ADMIN username and password
# Credentials will be moved to a secret object in the next push..
management:
  enabled: true
  # Enable Restman, if DBbacked this setting will persist until manually deleted via Policy Manager.
  restman:
    enabled: false
  username: admin
  password: 7layer

# Database configuration
database:
  # DB Backed or ephemeral
  enabled: true
  # A MySQL Database is configured with this Chart, set to false and set jdbcURL to use your own DB server
  create: true
  # jdbcURL: jdbc:mysql://<host>:<port>/<database> | jdbc:mysql://<host>:<port>,<host>:<port>/<database>,...
  # Configurable, update the mysql.<settings> if you change this
  username: gateway
  password: 7layer
  name: ssg

## Beta - enable/disable the background metrics processing task
## Enabling this creates a policy on the Gateway and routes service metrics to influxDbUrl
## Disabling on upgrade will have no effect on the deployed policy
## To be replaced with a user defined bundle relevant to the endpoint they wish to relay service metrics to.
## InfluxDbUrl and tags are Cluster-Wide-Properties.
serviceMetrics:
  enabled: false
  influxDbUrl: http://influxdb
  influxDbPort: 8086
  influxDbDatabase: serviceMetricsDb
  tags: env=dev

config:
  heapSize: "2g"
  javaArgs:
    - -Dcom.l7tech.bootstrap.autoTrustSslKey=trustAnchor,TrustedFor.SSL,TrustedFor.SAML_ISSUER
    - -Dcom.l7tech.server.audit.message.saveToInternal=false
    - -Dcom.l7tech.server.audit.admin.saveToInternal=false
    - -Dcom.l7tech.server.audit.system.saveToInternal=false
    - -Dcom.l7tech.server.audit.log.format=json
    - -Djava.util.logging.config.file=/opt/SecureSpan/Gateway/node/default/etc/conf/log-override.properties
    - -Dcom.l7tech.server.pkix.useDefaultTrustAnchors=true
    - -Dcom.l7tech.security.ssl.hostAllowWildcard=true
  log:
    override: true
    properties: |-
      handlers = com.l7tech.server.log.GatewayRootLoggingHandler, com.l7tech.server.log.ConsoleMessageSink$L7ConsoleHandler
      com.l7tech.server.log.GatewayRootLoggingHandler.formatter = com.l7tech.util.JsonLogFormatter
      java.util.logging.SimpleFormatter.format=
      com.l7tech.server.log.ConsoleMessageSink$L7ConsoleHandler.formatter = com.l7tech.util.JsonLogFormatter
      com.l7tech.server.log.ConsoleMessageSink$L7ConsoleHandler.level = CONFIG
tls:
  customKey:
    enabled: false

#Additional Environment variables to be added to the Gateway Configmap
additionalEnv:
  key1: value

# key1: value
# key2: value

#Additional Secret variables to be added to the Gateway Secret
additionalSecret:
  key1: value

# key1: value
# key2: value

# This mounts a bundle folder to the Gateway.
bundle:
  enabled: false

service:
  # Service Type, ClusterIP, NodePort, LoadBalancer
  type: LoadBalancer
  ## Load Balancer sources
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ##
  # loadBalancerSourceRanges:
  # - 10.10.10.0/24

  ## Set the ExternalIPs
  ##
  # externalIPs:

  ## Set the LoadBalancerIP
  ##
  # loadBalancerIP:
  ports:
    - name: https
      internal: 8443
      external: 8443
    - name: management
      internal: 9443
      external: 9443
  # Additional Service annotations, the example below shows configuration for an internal load balancer on GCP
  # See the docs for more ==> https://kubernetes.io/docs/concepts/services-networking/service/
  annotations: {}
#    cloud.google.com/load-balancer-type: "Internal"

# This project does not currently support Google's GCE controller.
# The default way to expose the Gateway is via L4 Load Balancer because it goes far beyond the HTTP(S) limitation ingress currently imposes
# Certificates are not created here, please specify an existing cert secret to use if enabling TLS
ingress:
  # Set to true to create ingress object
  enabled: false
  class: nginx
  # Ingress annotations 
  annotations:
  # Ingress class
  #  nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  
  # When the ingress is enabled, a host pointing to this will be created
  # By default clusterHostname is used, only set this if you want to use a different host
  hostname:
  ## The port that you want to route to via ingress. This needs to be available via service.ports.
  port: https
  ## Enable TLS configuration for the hostname defined at ingress.hostname/clusterHostname parameter
  tls: false
  secretName:

  #Need to configure additional ingress options for hosts/tls

livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 10

readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 10

resources:
  # There are no resource limits set by default, this is a consicious choice for the user and
  # increases the chance of these running on environments with fewer resources available
  # Remove the curly braces and uncomment cpu/memory to set.
  limits: {}
  #   cpu: 1000m
  #   memory: 2Gi
  requests: {}
  #   cpu: 1000m
  #   memory: 2Gi

#serviceAccount:


# MySQL stable chart - this is not scalable nor will be in this format.
mysql:
  imageTag: "8"
  mysqlUser: gateway
  mysqlPassword: 7layer
  mysqlDatabase: ssg
  #mysqlRootPassword: 7layer
  persistence:
    enabled: true
    size: 8Gi
    #storageClass:
  
  configurationFiles:
    my.cnf: |-
      [mysqld]
      character-set-server = utf8
      innodb_log_buffer_size = 32M
      innodb_log_file_size = 80M
      max_allowed_packet = 8M
      default-authentication-plugin=mysql_native_password
      log-bin-trust-function-creators=1


# Settings for Hazelcast - https://github.com/hazelcast/charts/blob/master/stable/hazelcast/values.yaml
hazelcast:
  # If you wish to connect to an existing Hazelcast instance set enabled to false
  # external to true, and uncomment and set url.
  enabled: false
  external: false
  #url: hazelcast.example.com:5701
  cluster:
    memberCount: 2
  hazelcast:
    yaml:
      hazelcast:
        network:
          join:
            multicast:
              enabled: false
            kubernetes:
              enabled: true
              service-name: ${serviceName}
              namespace: ${namespace}
              resolve-not-ready-addresses: true
